{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGallery/ImageGallery.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","api/images.js","api/constants.js","App.js","index.js"],"names":["Searchbar","state","value","onChange","e","setState","target","handleSearchSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","Component","ImageGallery","children","ImageGalleryItem","images","showImage","map","img","onClick","id","largeImageURL","src","webformatURL","alt","tags","shortid","generate","Button","window","scrollTo","top","document","documentElement","scrollHeight","behavior","App","color","height","width","React","modalRoot","querySelector","Modal","handleKeyDown","code","currentTarget","onClose","console","log","addEventListener","removeEventListener","image","createPortal","axios","defaults","baseURL","getImages","query","page","a","params","get","data","hits","isLoading","error","showModal","bigImg","handleSubmit","toggleModal","handleButton","prevState","dataset","largeimg","setImages","prevProps","loadMore","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dbf1fd73.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  handleSearchSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSearchSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              value={this.state.value}\r\n              onChange={this.onChange}\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ children }) {\r\n  return (\r\n    <>\r\n      <ul className=\"ImageGallery\">{children}</ul>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({ images, showImage }) {\r\n  return (\r\n    <>\r\n      {images.map(img => {\r\n        return (\r\n          <li\r\n            onClick={showImage}\r\n            key={shortid.generate()}\r\n            className=\"ImageGalleryItem\"\r\n          >\r\n            <img\r\n              data-id={img.id}\r\n              data-largeimg={img.largeImageURL}\r\n              src={img.webformatURL}\r\n              alt={img.tags}\r\n              className=\"ImageGalleryItem-image\"\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  showImage: PropTypes.func,\r\n  images: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <button className=\"Button\" onClick={onClick} type=\"button\">\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default class App extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className=\"Loader\"\r\n        type=\"Hearts\"\r\n        color=\"#3f51b5\"\r\n        height={80}\r\n        width={80}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape' || e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { image } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleKeyDown}>\r\n        <div className=\"Modal\">\r\n          <img src={image.src} alt={image.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  images: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      largeImageURL: PropTypes.string,\r\n      webformatURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import { BASE_URL, API_KEY, per_page } from './constants';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\nexport const getImages = async (query, page) => {\r\n  const params = `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`;\r\n  const { data } = await axios.get(params);\r\n\r\n  return data.hits;\r\n};\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '23491087-4191226b82b28486631b9987a';\r\nconst per_page = 12;\r\n\r\nexport { BASE_URL, API_KEY, per_page };\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Searchbar from './Components/Searchbar/Searchbar.jsx';\nimport ImageGallery from './Components/ImageGallery/ImageGallery.jsx';\nimport ImageGalleryItem from './Components/ImageGalleryItem/ImageGalleryItem.jsx';\nimport Button from './Components/Button/Button.jsx';\nimport Loader from './Components/Loader/Loader.jsx';\nimport Modal from './Components/Modal/Modal.jsx';\nimport { getImages } from 'api/images';\n\nexport default class App extends Component {\n  state = {\n    page: 1,\n    query: '',\n    images: [],\n    isLoading: false,\n    error: null,\n    showModal: false,\n    bigImg: {},\n  };\n\n  handleSubmit = value => {\n    this.setState({ query: value });\n  };\n\n  toggleModal = () => {\n    this.setState({ showModal: !this.state.showModal });\n  };\n\n  handleButton = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.setState({ isLoading: true });\n  };\n\n  showImage = e => {\n    this.toggleModal();\n    this.setState({\n      bigImg: {\n        src: e.target.dataset.largeimg,\n        alt: e.target.alt,\n      },\n    });\n  };\n\n  async setImages() {\n    try {\n      const { page, query } = this.state;\n      const images = await getImages(query, page);\n      this.setState({ images });\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async loadMore() {\n    try {\n      const { page, query } = this.state;\n      const images = await getImages(query, page);\n      // if (images.length < 12) {\n\n      // }\n      images.map(img => {\n        return this.setState(prevState => ({\n          images: [\n            ...prevState.images,\n            {\n              id: img.id,\n              webformatURL: img.webformatURL,\n              largeImageURL: img.largeImageURL,\n            },\n          ],\n        }));\n      });\n    } catch (error) {\n      this.setState({ error });\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    this.setImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(`componentDidUpdate`);\n    if (this.state.query !== prevState.query) {\n      this.setImages();\n    }\n    if (this.state.page !== prevState.page) {\n      this.loadMore();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSubmit} />\n        {this.state.images.length > 0 && (\n          <ImageGallery>\n            <ImageGalleryItem\n              showImage={this.showImage}\n              images={this.state.images}\n            />\n            {this.state.showModal && (\n              <Modal onClose={this.toggleModal} image={this.state.bigImg} />\n            )}\n          </ImageGallery>\n        )}\n\n        {this.state.isLoading ? (\n          <Loader />\n        ) : (\n          <Button onClick={this.handleButton} />\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}